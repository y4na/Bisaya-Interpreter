SUGOD
MUGNA NUMERO x, y, z=5
MUGNA LETRA a_1='n'
MUGNA TINUOD t="OO"
x=y=4
a_1='c'
IPAKITA: x & t & z & $ & a_1 & [#] & "last"
KATAPUSAN

SUGOD
MUGNA NUMERO xyz, abc=100
xyz= ((abc *5)/10 + 10) * -1
IPAKITA: [[] & xyz & []]
KATAPUSAN

SUGOD
MUGNA NUMERO a=100, b=200, c=300
MUGNA TINUOD d="DILI"
d = (a < b UG c <>200)
IPAKITA: d
KATAPUSAN

// comments
-- comment
SUGOD
MUGNA NUMERO xyz, abc=100
xyz= ((abc *5)/10 + 10) * -1
IPAKITA: [[] & xyz & []] -- this is a comment
KATAPUSAN

//basic arithmetic
SUGOD
MUGNA NUMERO x = 10, a = 10
MUGNA NUMERO ans = x + a
IPAKITA: ans
KATAPUSAN

// basic dawat/scan
SUGOD
MUGNA NUMERO z, y, ans
IPAKITA: "Enter z & y: "
DAWAT: z, y
ans = z + y
IPAKITA: ans
KATAPUSAN

// precedence
SUGOD
MUGNA NUMERO a, b, c
a = 10 + 5 * 2
b = (10 + 5) * 2
c = (10 + (5 * 2))
IPAKITA: a & $ & b & $ & c
KATAPUSAN

// logical op
SUGOD
MUGNA TINUOD x, y, result
x = "OO"
y = "DILI"
result = (x UG y)
IPAKITA: result
KATAPUSAN


// bool
SUGOD
MUGNA NUMERO edad=20
MUGNA TINUOD pwede
pwede = (edad >= 18)
IPAKITA: pwede
KATAPUSAN

// all data types
SUGOD
MUGNA NUMERO num=10
MUGNA TIPIK pi=3.14
MUGNA LETRA letra1='A'
MUGNA TINUOD isTrue="OO"
IPAKITA: num & $ & pi & $ & letra1 & $ & isTrue
KATAPUSAN

// simple if
SUGOD
MUGNA NUMERO edad=21
KUNG (edad >= 18)
PUNDOK{
    IPAKITA: "Sakto ang edad"
}
KATAPUSAN

// simple for
SUGOD
MUGNA NUMERO ctr
ALANG SA (ctr=1, ctr<=5, ctr++)
PUNDOK{
    IPAKITA: ctr & ' '
}
KATAPUSAN


SUGOD
MUGNA NUMERO value=10  -- declared outside

ALANG SA (value=1, value<=3, value++)
PUNDOK{
    IPAKITA: "Loop value: " & value & $

    KUNG (value % 2 == 0)
    PUNDOK{
        MUGNA LETRA value='E'  -- new MUGNA inside PUNDOK (different type)
        IPAKITA: "Even, new value: " & value & $
    }
}

-- After loop, show original `value`
IPAKITA: "After loop, value is: " & value

KATAPUSAN
